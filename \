import streamlit as st
import pycountry
from utils.country_review import db_get_country_domains, excel_writer
import pandas as pd
from io import BytesIO
from utils.db_pedia import get_db_data

st.set_page_config(
        page_title="Coverage research",
        page_icon="üî¨"
)

st.title("Country Reviews")
st.header("Set up Your Research Sheet", divider="rainbow")
st.subheader("Select Country for Review")

countries = []
for i in pycountry.countries:
    countries.append(i.name)

country_selectbox = st.selectbox(label="Select country", options=countries, index=None, placeholder="Select Country for Review")

st.subheader("Extract Comply Data")
st.write("Extract domains from Comply Advantage db")
query_btn = st.button(label="Get domains")

if query_btn:
        if country_selectbox is None:
            st.toast("Select Country!")
            exit()
        country_code: str = pycountry.countries.get(name=country_selectbox).alpha_2 
        country_data: pd.DataFrame = db_get_country_domains(country_code)
        excel_data_io: BytesIO = excel_writer(country_data, country_code, "comply")
        st.download_button(label="Download research sheet", data=excel_data_io, file_name=f"AM Coverage in {country_selectbox}.xlsx", mime='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')
        st.dataframe(country_data)

st.subheader("Select DBPedia")

form = st.form(key="dbpedia")
dbPedia_lang = form.radio("Language", ["English", "French"], horizontal=True)
dbPedia_query = form.text_input(label="Name of page")
dbPedia_btn = form.form_submit_button(label="Get DBPEdia")


if form:
    
    if dbPedia_btn:
        match dbPedia_lang:
            case "English":
                yaml_file = "en.yml"
                endpoint = "https://dbpedia.org/sparql"
                lng = "@en"
            case "French":
                yaml_file = "fr.yml"
                lng = "@fr"
                endpoint = "https://fr.dbpedia.org/sparql"

        dbPedia_data: pd.DataFrame | None = get_db_data(yaml_file, dbPedia_query, lng, endpoint)
        if dbPedia_data.empty:
            st.warning("‚ö†Ô∏è Page not found on DBPedia. Check that page queried matches name of wikipedia page.")
            quit()
        dbPedia_excel: BytesIO = excel_writer(dbPedia_data, country_code, "wikipedia")
        st.dataframe(dbPedia_data)

        st.download_button(label="Download research sheet", data=dbPedia_excel, file_name=f"AM Coverage in {country_selectbox}.xlsx", mime='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')
